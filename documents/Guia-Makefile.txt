¿Qué es un Makefile?
Un archivo Makefile contiene las instrucciones que se utilizan para compilar un archivo fuente o *.cpp y convertirlo en un ejecutable o *.exe

Por lo general los IDEs(Codeblocks, DevC++, VisualCode, Eclipse, otros...) ejecutan las instrucciones de compilación de forma automática evitando de está forma que el usuario tenga que intervenir de alguna manera en la conversión de códiggo fuente a archivo ejecutable.

Ejemplo de compilación manual:

[Running] cd "c:\Users\Documents\UNJBG\Cuarto-Semestre\Modelado Computacional\Laboratorio\1.3.1-ProyectoCalculadoraMatrices\src\" && g++ main.cpp -o main && start main

Nota: los IDEs usan lo mismo y se puede observar en sus terminales cuando se ejecuta la orden de compilación

 - cd: es un instrucción para mover el cursor del programa a la dirección proporcionada
 - g++ : es el compilador e interprete que transforma el código que se le proporciona
 - -o : es el estado de salida final de código que se le indica al compilador, en este caso -o significa ejecutable, existen variedad de estados como lo son las librerias estáticas o dinámicas y los archivos de enlazado o pre-compilado.
 - main.cpp : es el nombre del archivo a compilar
 - main : es el archivo de salida que se obtiene al finalizar el compilado, en este caso es un ejecutable
 - && : es una instrucción de agregado, cumple la función de agregar otra instrucción extra luego de finalizar la compilación indicada
 - start : es una instrucción para ejecutar un archivo, en este caso se ejecuta el archivo obtenido luego de finalizar la compilación
